{"version":3,"sources":["reportWebVitals.js","components/styles.js","assets/images/logo-header.png","components/template/Header.js","assets/images/logo.png","components/Login/Login.js","components/UserInfos/UserInfos.js","components/Search/Search.js","components/Repos/ReposCards.js","components/Repos/Repos.js","Routes.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","HeaderStyle","styled","header","FormTitle","div","Form","form","Button","input","FormGroup","FieldsForm","label","GitInfosContainer","GitInfosFollowersContainer","GitInfosFollowers","Error","ContainerRepos","ReposCardsStyle","ContainerButtonModal","Header","props","logout","href","src","LogoHeader","alt","localStorage","getItem","type","onClick","Login","useState","login","password","details","setDetails","history","useHistory","error","setError","adminUser","Logo","onSubmit","e","logininfo","preventDefault","user","setItem","push","loginFn","className","htmlFor","name","id","onChange","target","value","UserInfos","gitInfos","data","avatar_url","public_repos","followers","Search","searchInput","setSearchInput","setGitInfos","submitSearch","a","axios","result","removeItem","length","Modal","setAppElement","ReposCards","forks","stars","url","modalIsOpen","setModalIsOpen","isOpen","onRequestClose","style","overlay","backgroundColor","content","color","height","width","maxWidth","top","left","right","bottom","marginRight","transform","boxShadow","rel","Repos","repos","setRepos","useEffect","map","item","forks_count","stargazers_count","html_url","exact","path","component","from","to","App","Routes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5522dc7a.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body,html {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n  }  \r\n\r\n  html {\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  main {\r\n    height:calc(100vh - 64px);\r\n    display: flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    flex-direction:column;\r\n  }\r\n`;\r\n\r\nexport const HeaderStyle = styled.header`\r\n  overflow: hidden;\r\n  background-color: #405d49;\r\n  padding: 5px 20px;\r\n  display:flex;\r\n  align-items:center;\r\n\r\n  img{\r\n    width:100px;\r\n  }\r\n\r\n  div:nth-child(1){\r\n    flex:95%;\r\n  }\r\n\r\n  div:nth-child(2){\r\n    flex:5%;\r\n    display:flex;\r\n    align-items:center;\r\n  }\r\n\r\n  button {\r\n    background-color: #405d49;\r\n    color: white;\r\n    border:1px solid white;\r\n    border-radius:20px;\r\n    cursor:pointer;\r\n    margin-left:10px;\r\n    padding:5px 10px;\r\n  }\r\n\r\n  button:hover {\r\n    background-color: black;\r\n    color: white;\r\n    border-color:black;\r\n  }\r\n\r\n  span {\r\n    color:white;\r\n    font-size:14px;\r\n  }\r\n`;\r\n\r\nexport const FormTitle = styled.div`\r\n  display:flex;\r\n  justify-content:center;\r\n  flex-direction:column;\r\n\r\n  img {\r\n    width:200px;\r\n    margin-bottom:20px;\r\n  }\r\n\r\n  h2 {\r\n    color:black;\r\n    font-weight:lighter;\r\n    font-size:17px;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n   border: 1px solid #e1e4e8;\r\n   border-radius: 5px;\r\n   padding: 20px;\r\n   width:300px;\r\n`;\r\n\r\nexport const Button = styled.input`\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n  background-color: black;\r\n  color:white;\r\n  height: 30px;\r\n  margin-top:15px;\r\n`;\r\n\r\nexport const FormGroup = styled.div`\r\n  display:flex;\r\n  justify-content:left;\r\n`;\r\n\r\nexport const FieldsForm = styled.label`\r\n  color: black;\r\n  font-size: 14px;\r\n  margin-bottom:10px;\r\n  width:100%;\r\n  font-weight:normal;\r\n\r\n  input {\r\n    display:block;\r\n    width:100%;\r\n    border-radius:5px;\r\n    margin-top:5px;\r\n    height:25px;\r\n    border: 1px solid #e1e4e8;\r\n  }\r\n\r\n  input:focus-visible{\r\n    outline:none;\r\n    box-shadow: 0 0 3px #0366d6;\r\n  }\r\n`;\r\n\r\nexport const GitInfosContainer = styled.div`\r\n  margin-top:15px;\r\n  display:flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border: 1px solid #e1e4e8;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n  width:300px;\r\n  transition: 0.5s all;\r\n\r\n  img {\r\n    width:120px;\r\n    border-radius:100%;\r\n  }\r\n\r\n  button {\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n    background-color: black;\r\n    color:white;\r\n    height: 30px;\r\n    margin-top:15px;\r\n  }\r\n`;\r\n\r\nexport const GitInfosFollowersContainer = styled.div`\r\n  margin-top:15px;\r\n  width:100%;\r\n  display:flex;\r\n`;\r\n\r\nexport const GitInfosFollowers = styled.div`\r\n  display:flex;\r\n  flex-direction:column;\r\n  align-items:center;\r\n  flex:50%;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    border: 1px solid black;\r\n    border-radius: 100%;\r\n    padding:5px;\r\n    width:32px;\r\n    margin-top:10px;\r\n    background-color:black;\r\n    color:white;\r\n  }\r\n`;\r\n\r\nexport const Error = styled.div`\r\n  margin-top:15px;\r\n  color:black;\r\n  font-size:15px;\r\n  text-align:center;\r\n`;\r\n\r\nexport const ContainerRepos = styled.div`\r\n  width:100%;\r\n  display:flex;\r\n  flex-wrap:wrap;\r\n  height:130px;\r\n  padding: 20px 60px;\r\n  height:100%;\r\n  justify-content:center;\r\n  align-items:center;\r\n  align-content:center;\r\n`;\r\n\r\nexport const ReposCardsStyle = styled.div`\r\n  flex:0 0 200px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  margin: 5px;\r\n  height:100px;\r\n  box-shadow: 1px 1px 5px black;\r\n\r\n  button{\r\n    background-color:#405d49;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items:center;\r\n    color:white;\r\n    text-decoration:none;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    cursor:pointer;\r\n  }\r\n`;\r\n\r\nexport const ContainerButtonModal = styled.div`\r\n  width: 60px;\r\n  position: absolute;\r\n  top: 20px;\r\n  right: -0px;\r\n\r\n  button{\r\n    background:transparent;\r\n    border:none;\r\n    font-size:16px;\r\n    cursor:pointer;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/logo-header.2f318913.png\";","import React, { useState } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { HeaderStyle } from '../styles';\r\nimport LogoHeader from '../../assets/images/logo-header.png';\r\n\r\nfunction Header(props) {\r\n  const { logout } = props;\r\n\r\n  return (\r\n    <HeaderStyle>\r\n      <div>\r\n        <a href=\"/home\">\r\n          <img src={LogoHeader} alt=\"Logo\" />\r\n        </a>\r\n      </div>\r\n      <div>\r\n        <span>{localStorage.getItem('@login-app/user')}</span>\r\n        <button type=\"button\" onClick={logout}>Logout</button>\r\n      </div>\r\n    </HeaderStyle>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/logo.b483c99c.png\";","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from '../template/Header';\r\n\r\nimport {\r\n  Form, Button, FormGroup, FieldsForm, FormTitle, Error,\r\n} from '../styles';\r\n\r\nimport Logo from '../../assets/images/logo.png';\r\n\r\nfunction Login() {\r\n  const [details, setDetails] = useState({ login: '', password: '' });\r\n  const history = useHistory();\r\n  const [error, setError] = useState('');\r\n\r\n  const adminUser = {\r\n    user: 'admin',\r\n    password: 'admin123',\r\n  };\r\n\r\n  const loginFn = (e, logininfo) => {\r\n    e.preventDefault();\r\n    if (logininfo.user === adminUser.user && logininfo.password === adminUser.password) {\r\n      localStorage.setItem('@login-app/user', logininfo.user);\r\n      history.push('/home');\r\n    } else {\r\n      setError('Usuário ou Senha incorretos!');\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <FormTitle>\r\n        <img src={Logo} alt=\"Logo\" />\r\n      </FormTitle>\r\n      <Form onSubmit={(e) => loginFn(e, details)}>\r\n        <div className=\"form-inner\">\r\n          <FormGroup>\r\n            <FieldsForm htmlFor=\"user\">\r\n              Usuario:\r\n              <input type=\"user\" name=\"text\" id=\"user\" onChange={(e) => setDetails({ ...details, user: e.target.value })} value={details.user} />\r\n            </FieldsForm>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <FieldsForm htmlFor=\"password\">\r\n              Password:\r\n              <input type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setDetails({ ...details, password: e.target.value })} value={details.password} />\r\n              {(error !== '') ? <Error className=\"error\">{error}</Error> : ''}\r\n            </FieldsForm>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button type=\"submit\" value=\"Login\" />\r\n          </FormGroup>\r\n        </div>\r\n      </Form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {\r\n  GitInfosContainer, GitInfosFollowers, GitInfosFollowersContainer,\r\n} from '../styles';\r\n\r\nconst UserInfos = (props) => {\r\n  const { gitInfos } = props;\r\n  const history = useHistory();\r\n  localStorage.setItem('@git/user', gitInfos.data.login);\r\n\r\n  const goToRepos = () => {\r\n    history.push('/repos');\r\n  };\r\n\r\n  return (\r\n    <GitInfosContainer>\r\n      <img src={gitInfos.data.avatar_url} alt=\"Avatar\" />\r\n      <div>\r\n        <h2>{gitInfos.data.name}</h2>\r\n      </div>\r\n      <div>\r\n        <span>\r\n          Repositórios Públicos:\r\n          {` ${gitInfos.data.public_repos}`}\r\n        </span>\r\n      </div>\r\n      <button type=\"button\" onClick={goToRepos}>Ver Repositórios</button>\r\n      <GitInfosFollowersContainer>\r\n        <GitInfosFollowers>\r\n          Seguidores\r\n          {' '}\r\n          <div>{gitInfos.data.followers}</div>\r\n        </GitInfosFollowers>\r\n        <GitInfosFollowers>\r\n          Seguindo\r\n          {' '}\r\n          <div>{gitInfos.data.followers}</div>\r\n        </GitInfosFollowers>\r\n      </GitInfosFollowersContainer>\r\n    </GitInfosContainer>\r\n  );\r\n};\r\n\r\nUserInfos.propTypes = {\r\n  gitInfos: PropTypes.objectOf.isRequired,\r\n};\r\n\r\nexport default UserInfos;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from '../template/Header';\r\n\r\nimport {\r\n  Form, Button, FormGroup, FieldsForm, FormTitle, Error,\r\n} from '../styles';\r\nimport UserInfos from '../UserInfos/UserInfos';\r\n\r\nfunction Search() {\r\n  const [searchInput, setSearchInput] = useState({ user: '' });\r\n  const [gitInfos, setGitInfos] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const history = useHistory();\r\n\r\n  const submitSearch = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // const result = await axios(`https://api.github.com/users/${searchInput.user}/repos`);\r\n      const result = await axios(`https://api.github.com/users/${searchInput.user}`);\r\n      setGitInfos(result);\r\n    } catch (exception) {\r\n      setGitInfos('');\r\n      setError('Não foi possível encontrar o usuário');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('@login-app/user');\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header logout={logout} />\r\n      <main>\r\n        <FormTitle>\r\n          <h2>Procure por um usuário do GitHub</h2>\r\n        </FormTitle>\r\n        <Form onSubmit={(e) => submitSearch(e)}>\r\n          <div className=\"form-inner\">\r\n            {/* {(error !== '') ? <div className=\"error\">{error}</div> : ''} */}\r\n            <FormGroup>\r\n              <FieldsForm>\r\n                <input type=\"text\" name=\"gitUser\" id=\"gitUser\" onChange={(e) => setSearchInput({ ...searchInput, user: e.target.value })} value={searchInput.user} />\r\n              </FieldsForm>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Button type=\"submit\" value=\"Search\" />\r\n            </FormGroup>\r\n          </div>\r\n        </Form>\r\n        {gitInfos.length !== 0 ? (<UserInfos gitInfos={gitInfos} />) : (<Error>{error}</Error>)}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from 'react-modal';\r\nimport { ReposCardsStyle, ContainerButtonModal } from '../styles';\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction ReposCards(props) {\r\n  const {\r\n    name, forks, stars, url,\r\n  } = props;\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  return (\r\n    <ReposCardsStyle>\r\n      <button type=\"button\" onClick={() => setModalIsOpen(true)}>\r\n        {name}\r\n      </button>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={() => setModalIsOpen(false)}\r\n        style={\r\n          {\r\n            overlay: {\r\n              backgroundColor: 'transparent',\r\n            },\r\n            content: {\r\n              color: 'black',\r\n              height: 220,\r\n              width: '80%',\r\n              maxWidth: 400,\r\n              top: '43%',\r\n              left: '44%',\r\n              right: 'auto',\r\n              bottom: 'auto',\r\n              marginRight: '-50%',\r\n              transform: 'translate(-40%, -10%)',\r\n              boxShadow: '1px 1px 10px black',\r\n            },\r\n          }\r\n\r\n        }\r\n      >\r\n        <section>\r\n          <header>\r\n            <h2>{name}</h2>\r\n          </header>\r\n          <hr />\r\n          <article>\r\n            <p>\r\n              Forks:\r\n              {forks}\r\n            </p>\r\n            <p>\r\n              Stars:\r\n              {stars}\r\n            </p>\r\n            <p>\r\n              <a href={url} target=\"_blank\" rel=\"noreferrer\">Link para o repositório</a>\r\n            </p>\r\n          </article>\r\n        </section>\r\n\r\n        <ContainerButtonModal>\r\n          <button type=\"button\" onClick={() => setModalIsOpen(false)}>X</button>\r\n        </ContainerButtonModal>\r\n      </Modal>\r\n    </ReposCardsStyle>\r\n  );\r\n}\r\n\r\nReposCards.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  forks: PropTypes.number.isRequired,\r\n  stars: PropTypes.number.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ReposCards;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from '../template/Header';\r\nimport ReposCards from './ReposCards';\r\nimport { ContainerRepos } from '../styles';\r\n\r\nconst Repos = (props) => {\r\n  const [repos, setRepos] = useState('');\r\n  const [error, setError] = useState('');\r\n  const history = useHistory();\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('@login-app/user');\r\n    history.push('/');\r\n  };\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const result = await axios(`https://api.github.com/users/${localStorage.getItem('@git/user')}/repos`);\r\n      setRepos(result.data);\r\n      if (repos.length === 0) {\r\n        setError('Não foi possível encontrar repositórios para este usuário');\r\n      }\r\n    } catch (exception) {\r\n      setRepos('');\r\n      setError('Ouve um erro na requisição dos repositórios');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header logout={logout} />\r\n      <main>\r\n        <ContainerRepos>\r\n          {repos.length !== 0\r\n            ? (repos.map((item) => (\r\n              <ReposCards\r\n                key={item.id}\r\n                name={item.name}\r\n                forks={item.forks_count}\r\n                stars={item.stargazers_count}\r\n                url={item.html_url}\r\n              />\r\n            )))\r\n            : (<span>{error}</span>)}\r\n        </ContainerRepos>\r\n      </main>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Repos;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\n\r\nimport Login from './components/Login/Login';\r\nimport Search from './components/Search/Search';\r\nimport Repos from './components/Repos/Repos';\r\n\r\nexport default (props) => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Login} />\r\n    <Route exact path=\"/home\" component={Search} />\r\n    <Route exact path=\"/repos\" component={Repos} />\r\n    <Redirect from=\"*\" to=\"/\" />\r\n  </Switch>\r\n);\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter, useHistory } from 'react-router-dom';\r\nimport Routes from './Routes';\r\nimport { GlobalStyle } from './components/styles';\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <GlobalStyle />\r\n      <Routes />\r\n    </BrowserRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}